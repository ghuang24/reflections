How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    diff shows the exact location where changes occurred. You can look at each change and compare the difference side by side. Then, you can evaluate whether the change was a bug or not.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    have the ability to spot bugs without much manual scanning of the code

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    you can have a history of changes. You can always pick parts from old code if it worked better. Each commit is a working version of the code as opposed to google doc's autosaves.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Code is often dependent on different files. If files were saved separately, the code may not function correctly

How can you use the commands git log and git diff to view the history of files?

    git log to find 2 commits you want to check. Then, you can git diff the two id's to find exact locations where changes were made.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
